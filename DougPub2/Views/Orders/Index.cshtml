@model PagedList.IPagedList<DougPub2.Models.Order>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "Index";
}

<h2>Orders Main</h2>

<div class="bs-docs-section">
    <div class="row">
        @using (Html.BeginForm("Index", "Orders", FormMethod.Get))
        {

            <div class="form-group">
                <div class="input-group">
                    @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { style = "height: 37px;" })
                        <input type="submit" class="btn btn-info btn-sm" value="Search" />
                   
                </div>
            </div>
        }
    </div>
</div>



<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table table-striped table-hover">
    <tr>
        <th>
            Order Id
        </th>
        <th>
            @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Last Name
        </th>
        <th>
            Table No.
        </th>
        <th>
            Email
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.OrderId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TableNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.OrderId }) |
            @Html.ActionLink("Details", "Details", new { id = item.OrderId }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.OrderId })
        </td>
    </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))